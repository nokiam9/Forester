#
# - 默认引用.env，用于docker-compose.yml内部的变量引用
#
version: '3.2'

services:
  flask:
    build:
      context: flask/
    image: forester/flask:${__VERSION__}
    container_name: forester-flask
    restart: always
    environment: 
      - MONGODB_USERNAME=${F6R_MONGO_USERNAME}
      - MONGODB_PASSWORD=${F6R_MONGO_PASSWORD}
      - MONGODB_HOST=forester-mongo
      - MONGODB_PORT=27017

    networks:
      - forester_network
    
    # 仅用于单机测试
    # ports:
    #   - "8080:8000"

    volumes:
      # Notice: set host volume for attachment download
      - ${__DATA_ROOT__}/download:/download

  scrapy:
    build:
      context: scrapy/
    image: forester/scrapy:${__VERSION__}
    container_name: forester-scrapy
    restart: always
    environment: 
      - MONGODB_URI=mongodb://${F6R_MONGO_USERNAME}:${F6R_MONGO_PASSWORD}@forester-mongo:27017

    networks:
      - forester_network
    # 仅用于单机测试
    ports:
      - "6800:6800"

    volumes:
      # Notice: set host volume for attachment download
      - ${__DATA_ROOT__}/download:/download

  xunsearch-server:
    build:
      context: xunsearch/
      dockerfile: xunsearch-server.dockerfile
    image: forester/xunsearch-server:${__VERSION__}
    container_name: forester-xunsearch-server
    restart: always

    networks:
      - forester_network

    volumes:
      - ${__DATA_ROOT__}/xunsearch:/usr/local/xunsearch/data

  xunsearch:
    build:
      context: xunsearch/
      dockerfile: xunsearch.dockerfile
    image: forester/xunsearch:${__VERSION__}
    container_name: forester-xunsearch
    restart: always
    environment: 
      - MONGODB_URI=mongodb://${F6R_MONGO_USERNAME}:${F6R_MONGO_PASSWORD}@forester-mongo:27017

    networks:
      - forester_network
    
    # 仅用于单机测试
    # ports:
    #   - "9000:80"

  proxy:
    build:
      context: proxy/
    image: forester/proxy:${__VERSION__}
    container_name: forester-proxy
    restart: always

    networks:
      - forester_network
    # Notes: you can update serveice ports for deployment.
    ports:
      - "8080:80"

  cronjobs:
    build:
      context: cronjobs/
    image: forster/cronjobs:${__VERSION__}
    container_name: forester-cronjobs
    restart: always

    networks:
      - forester_network

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  mongo:
    image: mongo:3.6
    container_name: forester-mongo
    restart: always
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=${F6R_MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${F6R_MONGO_PASSWORD}

    networks:
      - forester_network
    
    # 仅用于单机开发和测试
    # ports: 
    #   - "47017:27017"

    volumes:
      # Notice: set host volume for mongo db
      - ${__DATA_ROOT__}/db:/data/db

    # depends_on: 
    #   - forester-log
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "tcp://127.0.0.1:8514"
    #     tags: 'mongo'
  
networks:
  forester_network:
    external: false
    attachable: true